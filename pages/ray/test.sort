@Pass {
  @BlendFunc(SRC_ALPHA, ONE_MINUS_SRC_ALPHA);
  FS_PREC(mediump, float)
  varying vec2 vTexCoord;
#ifdef VS
  attribute vec2 texcoord;
  attribute vec3 position;
  uniform mat4 _matPVM;
  void main() {
    vTexCoord = vec2(texcoord.x * 2. - 1., -texcoord.y * 2. + 1.);
    gl_Position = _matPVM * vec4(position, 1);
  }
#endif
#ifdef FS
  @{default : "orange", type : "color"};
  uniform vec4 col;
  void main() {
    vec3 cPos = vec3(.0, .0, 2.5);
    vec3 cDir = vec3(.0, .0, -1.);
    vec3 cUp = vec3(.0, 1., .0);
    vec3 cSide = cross(cDir, cUp);
    float targetDepth = 0.1;
    vec3 ray =
        normalize(cSide * vTexCoord.x + cUp * vTexCoord.y + cDir * targetDepth);
    float distance = 0.0;
    float rLen = 0.0;
    vec3 rPos = cPos;
    for (int i = 0; i < 16; i++) {
      distance = length(rPos) - 2.;
      rLen += distance;
      rPos = cPos + ray * rLen;
    }
    if (abs(distance) < 0.001) {
      gl_FragColor = vec4(vec3(1., 1., 1.), 1.0);
    } else {
      gl_FragColor = vec4(vec3(0, 0, 0), 1.0);
    }
  }
#endif
}
